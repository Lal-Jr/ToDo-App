{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","document","getElementById"],"mappings":"iMA2DeA,MAzDf,SAAkBC,GACjB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACTF,EAASG,QAAQC,WAGlB,IAAMC,EAAe,SAACC,GACrBP,EAASO,EAAEC,OAAOV,QAcnB,OACC,sBAAMW,UAAU,YAAYC,SAZR,SAACH,GACrBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACdE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAGPC,EAAS,KAIT,SACEL,EAAME,KACN,qCACC,uBACCoB,KAAK,OACLC,YAAY,mBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,kBACVW,SAAUd,EACVe,IAAKpB,IAEN,wBAAQQ,UAAU,mBAAlB,uBAGD,qCACC,uBACCQ,KAAK,OACLC,YAAY,WACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEN,wBAAQQ,UAAU,cAAlB,4B,eCPUa,MAxCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAChD,EAAwB9B,mBAAS,CAChCgB,GAAI,KACJd,MAAO,KAFR,mBAAOD,EAAP,KAAa8B,EAAb,KAaA,OAAI9B,EAAKe,GACD,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATT,SAACZ,GACrB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACPf,GAAI,KACJd,MAAO,QAQFyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OAChB,sBACCrB,UAAWoB,EAAKE,WAAa,oBAAsB,WADpD,UAIC,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACEiB,EAAKb,MADGa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACC,cAAC,IAAD,CACCuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAC/BH,UAAU,gBAEX,cAAC,IAAD,CACCuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAClDP,UAAU,mBAZPqB,OC+BOG,MArDf,WACC,MAA0BrC,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcW,EAAd,KAsCA,OACC,gCACC,4DACA,cAAC,EAAD,CAAUxB,SAvCI,SAACmB,GAChB,GAAKA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAApC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OAiCR,cAAC,EAAD,CACCb,MAAOA,EACPC,aAhBkB,SAACZ,GACrB,IAAIyB,EAAed,EAAMK,KAAI,SAACC,GAI7B,OAHIA,EAAKjB,KAAOA,IACfiB,EAAKE,YAAcF,EAAKE,YAElBF,KAERK,EAASG,IAUPZ,WAvBgB,SAACb,GACnB,IAAM0B,EAAY,YAAIf,GAAOgB,QAAO,SAACV,GAAD,OAAUA,EAAKjB,KAAOA,KAE1DsB,EAASI,IAqBPZ,WAlCgB,SAACc,EAAQC,GACtBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAI5CkB,GAAS,SAACQ,GAAD,OACRA,EAAKd,KAAI,SAACe,GAAD,OAAWA,EAAK/B,KAAO4B,EAASC,EAAWE,eCZxCC,MARf,WACC,OACC,qBAAKnC,UAAU,WAAf,SACC,cAAC,EAAD,OCFHoC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.decb9055.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n\tconst [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n\r\n\tconst inputRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tinputRef.current.focus();\r\n\t});\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetInput(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tprops.onSubmit({\r\n\t\t\tid: Math.floor(Math.random() * 10000),\r\n\t\t\ttext: input,\r\n\t\t});\r\n\r\n\t\tsetInput(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"todo-form\" onSubmit={handleSubmit}>\r\n\t\t\t{props.edit ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Update Your Item\"\r\n\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\t\tclassName=\"todo-input edit\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"todo-button edit\">Update</button>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Add Todo\"\r\n\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\t\tclassName=\"todo-input\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"todo-button\">Add Todo</button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n\tconst [edit, setEdit] = useState({\r\n\t\tid: null,\r\n\t\tvalue: \"\",\r\n\t});\r\n\r\n\tconst submitUpdate = (value) => {\r\n\t\tupdateTodo(edit.id, value);\r\n\t\tsetEdit({\r\n\t\t\tid: null,\r\n\t\t\tvalue: \"\",\r\n\t\t});\r\n\t};\r\n\r\n\tif (edit.id) {\r\n\t\treturn <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n\t}\r\n\r\n\treturn todos.map((todo, index) => (\r\n\t\t<div\r\n\t\t\tclassName={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n\t\t\tkey={index}\r\n\t\t>\r\n\t\t\t<div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n\t\t\t\t{todo.text}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"icons\">\r\n\t\t\t\t<RiCloseCircleLine\r\n\t\t\t\t\tonClick={() => removeTodo(todo.id)}\r\n\t\t\t\t\tclassName=\"delete-icon\"\r\n\t\t\t\t/>\r\n\t\t\t\t<TiEdit\r\n\t\t\t\t\tonClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n\t\t\t\t\tclassName=\"edit-icon\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction TodoList() {\r\n\tconst [todos, setTodos] = useState([]);\r\n\r\n\tconst addTodo = (todo) => {\r\n\t\tif (!todo.text || /^\\s*$/.test(todo.text)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst newTodos = [todo, ...todos];\r\n\r\n\t\tsetTodos(newTodos);\r\n\t};\r\n\r\n\tconst updateTodo = (todoId, newValue) => {\r\n\t\tif (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetTodos((prev) =>\r\n\t\t\tprev.map((item) => (item.id === todoId ? newValue : item))\r\n\t\t);\r\n\t};\r\n\r\n\tconst removeTodo = (id) => {\r\n\t\tconst removeArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n\t\tsetTodos(removeArr);\r\n\t};\r\n\r\n\tconst completeTodo = (id) => {\r\n\t\tlet updatedTodos = todos.map((todo) => {\r\n\t\t\tif (todo.id === id) {\r\n\t\t\t\ttodo.isComplete = !todo.isComplete;\r\n\t\t\t}\r\n\t\t\treturn todo;\r\n\t\t});\r\n\t\tsetTodos(updatedTodos);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>What's the Plan for Today?</h1>\r\n\t\t\t<TodoForm onSubmit={addTodo} />\r\n\t\t\t<Todo\r\n\t\t\t\ttodos={todos}\r\n\t\t\t\tcompleteTodo={completeTodo}\r\n\t\t\t\tremoveTodo={removeTodo}\r\n\t\t\t\tupdateTodo={updateTodo}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"todo-app\">\n\t\t\t<TodoList />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}